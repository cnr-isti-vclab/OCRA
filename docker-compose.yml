services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ocra-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-oauth_demo}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: ocra-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    ports:
      - "8081:8080"
    volumes:
      - ./keycloak/realm-export:/opt/keycloak/data/import
      - keycloak_config:/opt/keycloak/data
    command: start-dev --import-realm
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 90s

  mongodb:
    image: mongo:8.0
    container_name: ocra-mongodb
    environment:
      MONGO_INITDB_DATABASE: ocra_audit
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_configdb:/data/configdb
    healthcheck:
      # Use the newer mongosh shell and allow extra start time for WiredTiger recovery
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 })' >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: ocra-backend
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/oauth_demo}
      PORT: 3002
      SYS_ADMIN_EMAIL: ${SYS_ADMIN_EMAIL:-admin@ocra.it}  # User with this email gets admin privileges on first login
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3001,http://localhost:5173,http://localhost:5174}
    ports:
      - "3002:3002"
      - "5555:5555"  # Prisma Studio
    depends_on:
      - postgres
      - mongodb
    volumes:
      - backend_node_modules:/app/backend/node_modules
      - ./prisma:/app/backend/prisma:ro
      - project_files:/app/project_files

  app:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: ocra-frontend
    environment:
      PROVIDER_URL: ${PROVIDER_URL:-http://localhost:8081}
      REALM: ${REALM:-demo}
      ISSUER: ${ISSUER:-http://localhost:8081/realms/demo}
      CLIENT_ID: ${CLIENT_ID:-react-oauth}
      REDIRECT_URI: ${REDIRECT_URI:-http://localhost:3001}
      SCOPE: ${SCOPE:-openid profile email}
      VITE_API_BASE: ${VITE_API_BASE:-http://localhost:3002}
      # Database connection for Prisma
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:postgres@postgres:5432/oauth_demo}
    ports:
      - "3001:80"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
      mongodb:
        condition: service_healthy
      backend:
        condition: service_started

volumes:
  postgres_data:
  backend_node_modules:
  project_files:
  mongo_data:
  mongo_configdb:
  keycloak_config:
